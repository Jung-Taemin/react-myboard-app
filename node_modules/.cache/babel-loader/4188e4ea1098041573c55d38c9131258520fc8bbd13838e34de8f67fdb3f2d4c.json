{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\reactWorkspace\\\\react-myboard-app\\\\src\\\\components\\\\BoardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ApiService from \"../services/ApiService\";\nimport { Button, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setBoardId } from \"../store/slices/boardSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardList = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //컴포넌트가 마운트될 때 데이터를 불러오기\n  useEffect(() => {\n    const loadBoards = async () => {\n      try {\n        const response = await ApiService.fetchBoards();\n        console.log(response.data);\n        setBoards(response.data);\n      } catch (error) {\n        console.error(\"Error fetching boards: \", error);\n      }\n    };\n    loadBoards();\n  }, []);\n  const handleBoardClick = boardId => {\n    dispatch(setBoardId(boardId));\n    navigate(\"/posts\");\n    //navigate(`/board/${boardId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: \"true\",\n        onClick: () => handleBoardClick(board.board_id),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: board.board_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, board.board_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: Link,\n      to: \"/create-board\",\n      children: \"\\uC0C8 \\uAC8C\\uC2DC\\uD310 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardList, \"+AEcEi52GVDYJL0VqKnBImJxUHc=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","ApiService","Button","Container","List","ListItem","ListItemText","Typography","Link","useNavigate","useDispatch","setBoardId","jsxDEV","_jsxDEV","BoardList","_s","boards","setBoards","navigate","dispatch","loadBoards","response","fetchBoards","console","log","data","error","handleBoardClick","boardId","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","board","button","onClick","board_id","primary","board_name","color","component","to","_c","$RefreshReg$"],"sources":["C:/workspace/reactWorkspace/react-myboard-app/src/components/BoardList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiService from \"../services/ApiService\";\nimport {\n  Button,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setBoardId } from \"../store/slices/boardSlice\";\n\nconst BoardList = () => {\n  const [boards, setBoards] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //컴포넌트가 마운트될 때 데이터를 불러오기\n  useEffect(() => {\n    const loadBoards = async () => {\n      try {\n        const response = await ApiService.fetchBoards();\n        console.log(response.data);\n        setBoards(response.data);\n      } catch (error) {\n        console.error(\"Error fetching boards: \", error);\n      }\n    };\n\n    loadBoards();\n  }, []);\n\n  const handleBoardClick = (boardId) => {\n    dispatch(setBoardId(boardId));\n    navigate(\"/posts\");\n    //navigate(`/board/${boardId}`);\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\">게시판 목록</Typography>\n      <List>\n        {boards.map((board) => (\n          <ListItem\n            key={board.board_id}\n            button=\"true\"\n            onClick={() => handleBoardClick(board.board_id)}\n          >\n            <ListItemText primary={board.board_name} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        component={Link}\n        to=\"/create-board\"\n      >\n        새 게시판 추가\n      </Button>\n    </Container>\n  );\n};\n\nexport default BoardList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SACEC,MAAM,EACNC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,UAAU,QACL,eAAe;AACtB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMkB,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACAX,SAAS,CAAC,MAAM;IACd,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMpB,UAAU,CAACqB,WAAW,CAAC,CAAC;QAC/CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAC1BR,SAAS,CAACI,QAAQ,CAACI,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,gBAAgB,GAAIC,OAAO,IAAK;IACpCT,QAAQ,CAACR,UAAU,CAACiB,OAAO,CAAC,CAAC;IAC7BV,QAAQ,CAAC,QAAQ,CAAC;IAClB;EACF,CAAC;EAED,oBACEL,OAAA,CAACV,SAAS;IAAA0B,QAAA,gBACRhB,OAAA,CAACN,UAAU;MAACuB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC5CrB,OAAA,CAACT,IAAI;MAAAyB,QAAA,EACFb,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChBvB,OAAA,CAACR,QAAQ;QAEPgC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACS,KAAK,CAACG,QAAQ,CAAE;QAAAV,QAAA,eAEhDhB,OAAA,CAACP,YAAY;UAACkC,OAAO,EAAEJ,KAAK,CAACK;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAJtCE,KAAK,CAACG,QAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEPrB,OAAA,CAACX,MAAM;MACL4B,OAAO,EAAC,WAAW;MACnBY,KAAK,EAAC,SAAS;MACfC,SAAS,EAAEnC,IAAK;MAChBoC,EAAE,EAAC,eAAe;MAAAf,QAAA,EACnB;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAACnB,EAAA,CAnDID,SAAS;EAAA,QAEIL,WAAW,EACXC,WAAW;AAAA;AAAAmC,EAAA,GAHxB/B,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}