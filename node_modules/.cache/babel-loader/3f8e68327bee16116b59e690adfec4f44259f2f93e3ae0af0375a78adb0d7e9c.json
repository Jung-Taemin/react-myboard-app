{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8080/api\";\nconst ApiService = {\n  fetchBoards() {\n    return axios.get(`${API_BASE_URL}/board/all`);\n  },\n  createBoard(boardData) {\n    return axios.post(`${API_BASE_URL}/board`, boardData);\n  },\n  fetchPosts() {\n    return axios.get(`${API_BASE_URL}/post/all`);\n  },\n  //특정 boardId에 대한 게시글 목록을 가져옴\n  fetchPostsByBoardId(boardId) {\n    return axios.get(`${API_BASE_URL}/post/${boardId}`);\n  },\n  createPost(postData) {\n    return axios.post(`${API_BASE_URL}/post`, postData);\n  },\n  fetchPostDetails(postId, password) {\n    return axios.post(`${API_BASE_URL}/post/view`, {\n      post_id: postId,\n      password: password\n    });\n  },\n  // 게시글 삭제 API 호출\n  deletePost(postId, password) {\n    return axios.post(`${API_BASE_URL}/post/delete`, {\n      post_id: postId,\n      // 서버에서 기대하는 post_id\n      password: password // 비밀번호 전달\n    });\n  },\n  // 게시글 수정 API 호출\n  updatePost(postId, postData) {\n    return axios.put(`${API_BASE_URL}/post/${postId}`, postData);\n  }\n};\nexport default ApiService;","map":{"version":3,"names":["axios","API_BASE_URL","ApiService","fetchBoards","get","createBoard","boardData","post","fetchPosts","fetchPostsByBoardId","boardId","createPost","postData","fetchPostDetails","postId","password","post_id","deletePost","updatePost","put"],"sources":["C:/workspace/reactWorkspace/react-myboard-app/src/services/ApiService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:8080/api\";\n\nconst ApiService = {\n  fetchBoards() {\n    return axios.get(`${API_BASE_URL}/board/all`);\n  },\n\n  createBoard(boardData) {\n    return axios.post(`${API_BASE_URL}/board`, boardData);\n  },\n\n  fetchPosts() {\n    return axios.get(`${API_BASE_URL}/post/all`);\n  },\n\n  //특정 boardId에 대한 게시글 목록을 가져옴\n  fetchPostsByBoardId(boardId) {\n    return axios.get(`${API_BASE_URL}/post/${boardId}`);\n  },\n\n  createPost(postData) {\n    return axios.post(`${API_BASE_URL}/post`, postData);\n  },\n\n  fetchPostDetails(postId, password) {\n    return axios.post(`${API_BASE_URL}/post/view`, {\n      post_id: postId,\n      password: password,\n    });\n  },\n\n  // 게시글 삭제 API 호출\n  deletePost(postId, password) {\n    return axios.post(`${API_BASE_URL}/post/delete`, {\n      post_id: postId, // 서버에서 기대하는 post_id\n      password: password, // 비밀번호 전달\n    });\n  },\n\n  // 게시글 수정 API 호출\n  updatePost(postId, postData) {\n    return axios.put(`${API_BASE_URL}/post/${postId}`, postData);\n  },\n};\n\nexport default ApiService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,UAAU,GAAG;EACjBC,WAAWA,CAAA,EAAG;IACZ,OAAOH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,YAAY,CAAC;EAC/C,CAAC;EAEDI,WAAWA,CAACC,SAAS,EAAE;IACrB,OAAON,KAAK,CAACO,IAAI,CAAC,GAAGN,YAAY,QAAQ,EAAEK,SAAS,CAAC;EACvD,CAAC;EAEDE,UAAUA,CAAA,EAAG;IACX,OAAOR,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,WAAW,CAAC;EAC9C,CAAC;EAED;EACAQ,mBAAmBA,CAACC,OAAO,EAAE;IAC3B,OAAOV,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,SAASS,OAAO,EAAE,CAAC;EACrD,CAAC;EAEDC,UAAUA,CAACC,QAAQ,EAAE;IACnB,OAAOZ,KAAK,CAACO,IAAI,CAAC,GAAGN,YAAY,OAAO,EAAEW,QAAQ,CAAC;EACrD,CAAC;EAEDC,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IACjC,OAAOf,KAAK,CAACO,IAAI,CAAC,GAAGN,YAAY,YAAY,EAAE;MAC7Ce,OAAO,EAAEF,MAAM;MACfC,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC;EAED;EACAE,UAAUA,CAACH,MAAM,EAAEC,QAAQ,EAAE;IAC3B,OAAOf,KAAK,CAACO,IAAI,CAAC,GAAGN,YAAY,cAAc,EAAE;MAC/Ce,OAAO,EAAEF,MAAM;MAAE;MACjBC,QAAQ,EAAEA,QAAQ,CAAE;IACtB,CAAC,CAAC;EACJ,CAAC;EAED;EACAG,UAAUA,CAACJ,MAAM,EAAEF,QAAQ,EAAE;IAC3B,OAAOZ,KAAK,CAACmB,GAAG,CAAC,GAAGlB,YAAY,SAASa,MAAM,EAAE,EAAEF,QAAQ,CAAC;EAC9D;AACF,CAAC;AAED,eAAeV,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}