{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\reactWorkspace\\\\react-myboard-app\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ApiService from \"../services/ApiService\";\nimport Post from \"./Post\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button, Container, List, ListItem, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    boardId\n  } = useParams(); // boardId를 URL에서 받아오기\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const response = await ApiService.fetchPostsByBoardId(boardId); //전체 게시글 가져오는 API 호출\n        console.log(response.data);\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts: \", error);\n      }\n    };\n    loadPosts();\n  }, [boardId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\uAC8C\\uC2DC\\uAE00 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: Link,\n      to: \"/create-post\",\n      sx: {\n        mb: 2\n      },\n      children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"+OJd/bsq5oQAe4QzEuOupi1+UJs=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","ApiService","Post","Link","useParams","Button","Container","List","ListItem","Typography","jsxDEV","_jsxDEV","PostList","_s","boardId","posts","setPosts","loadPosts","response","fetchPostsByBoardId","console","log","data","error","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","color","component","to","sx","mb","_c","$RefreshReg$"],"sources":["C:/workspace/reactWorkspace/react-myboard-app/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiService from \"../services/ApiService\";\nimport Post from \"./Post\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button, Container, List, ListItem, Typography } from \"@mui/material\";\n\nconst PostList = () => {\n  const { boardId } = useParams(); // boardId를 URL에서 받아오기\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const response = await ApiService.fetchPostsByBoardId(boardId); //전체 게시글 가져오는 API 호출\n        console.log(response.data);\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts: \", error);\n      }\n    };\n\n    loadPosts();\n  }, [boardId]);\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        게시글 목록\n      </Typography>\n      <List>\n        {posts.map((post) => (\n          <ListItem key={post.id}>\n            <Post post={post} />\n          </ListItem>\n        ))}\n      </List>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        component={Link}\n        to=\"/create-post\"\n        sx={{ mb: 2 }}\n      >\n        게시글 작성\n      </Button>\n    </Container>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;EACjC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,UAAU,CAACkB,mBAAmB,CAACL,OAAO,CAAC,CAAC,CAAC;QAChEM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAC1BN,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA,CAACL,SAAS;IAAAkB,QAAA,gBACRb,OAAA,CAACF,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbnB,OAAA,CAACJ,IAAI;MAAAiB,QAAA,EACFT,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdrB,OAAA,CAACH,QAAQ;QAAAgB,QAAA,eACPb,OAAA,CAACT,IAAI;UAAC8B,IAAI,EAAEA;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADPE,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACPnB,OAAA,CAACN,MAAM;MACLoB,OAAO,EAAC,WAAW;MACnBS,KAAK,EAAC,SAAS;MACfC,SAAS,EAAEhC,IAAK;MAChBiC,EAAE,EAAC,cAAc;MACjBC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAd,QAAA,EACf;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAACjB,EAAA,CAzCID,QAAQ;EAAA,QACQR,SAAS;AAAA;AAAAmC,EAAA,GADzB3B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}