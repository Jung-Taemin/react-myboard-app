{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import ApiService from\"../services/ApiService\";import Post from\"./Post\";import{useNavigate}from\"react-router-dom\";import{Button,Container,List,ListItem,Typography}from\"@mui/material\";import{useSelector}from\"react-redux\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PostList=()=>{// const { boardId } = useParams(); // boardId를 URL에서 받아오기\nconst boardId=useSelector(state=>state.boardState.boardId);const[posts,setPosts]=useState([]);const navigate=useNavigate();useEffect(()=>{const loadPosts=async()=>{try{const response=await ApiService.fetchPostsByBoardId(boardId);//전체 게시글 가져오는 API 호출\nconsole.log(response.data);setPosts(response.data);}catch(error){console.error(\"Error fetching posts: \",error);}};loadPosts();},[boardId]);const handleCreatePost=boardId=>{//navigate.apply(`/create-post`, { state: { boardId } });\nnavigate(\"create-post\");};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"\\uAC8C\\uC2DC\\uAE00 \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(List,{children:posts.map(post=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(Post,{post:post})},post.id))}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>handleCreatePost(boardId),sx:{mb:2},children:\"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"})]});};export default PostList;","map":{"version":3,"names":["React","useEffect","useState","ApiService","Post","useNavigate","Button","Container","List","ListItem","Typography","useSelector","jsx","_jsx","jsxs","_jsxs","PostList","boardId","state","boardState","posts","setPosts","navigate","loadPosts","response","fetchPostsByBoardId","console","log","data","error","handleCreatePost","children","variant","gutterBottom","map","post","id","color","onClick","sx","mb"],"sources":["C:/workspace/github_test/react-myboard-app/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiService from \"../services/ApiService\";\nimport Post from \"./Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Container, List, ListItem, Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\nconst PostList = () => {\n  // const { boardId } = useParams(); // boardId를 URL에서 받아오기\n  const boardId = useSelector((state) => state.boardState.boardId);\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const response = await ApiService.fetchPostsByBoardId(boardId); //전체 게시글 가져오는 API 호출\n        console.log(response.data);\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts: \", error);\n      }\n    };\n\n    loadPosts();\n  }, [boardId]);\n\n  const handleCreatePost = (boardId) => {\n    //navigate.apply(`/create-post`, { state: { boardId } });\n    navigate(\"create-post\");\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        게시글 목록\n      </Typography>\n      <List>\n        {posts.map((post) => (\n          <ListItem key={post.id}>\n            <Post post={post} />\n          </ListItem>\n        ))}\n      </List>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => handleCreatePost(boardId)}\n        sx={{ mb: 2 }}\n      >\n        게시글 작성\n      </Button>\n    </Container>\n  );\n};\n\nexport default PostList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAC/C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,MAAM,CAAEC,SAAS,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,eAAe,CAC7E,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB;AACA,KAAM,CAAAC,OAAO,CAAGN,WAAW,CAAEO,KAAK,EAAKA,KAAK,CAACC,UAAU,CAACF,OAAO,CAAC,CAChE,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAoB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAE9BJ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArB,UAAU,CAACsB,mBAAmB,CAACR,OAAO,CAAC,CAAE;AAChES,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAC1BP,QAAQ,CAACG,QAAQ,CAACI,IAAI,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAEDN,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACN,OAAO,CAAC,CAAC,CAEb,KAAM,CAAAa,gBAAgB,CAAIb,OAAO,EAAK,CACpC;AACAK,QAAQ,CAAC,aAAa,CAAC,CACzB,CAAC,CAED,mBACEP,KAAA,CAACR,SAAS,EAAAwB,QAAA,eACRlB,IAAA,CAACH,UAAU,EAACsB,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,iCAEtC,CAAY,CAAC,cACblB,IAAA,CAACL,IAAI,EAAAuB,QAAA,CACFX,KAAK,CAACc,GAAG,CAAEC,IAAI,eACdtB,IAAA,CAACJ,QAAQ,EAAAsB,QAAA,cACPlB,IAAA,CAACT,IAAI,EAAC+B,IAAI,CAAEA,IAAK,CAAE,CAAC,EADPA,IAAI,CAACC,EAEV,CACX,CAAC,CACE,CAAC,cACPvB,IAAA,CAACP,MAAM,EACL0B,OAAO,CAAC,WAAW,CACnBK,KAAK,CAAC,SAAS,CACfC,OAAO,CAAEA,CAAA,GAAMR,gBAAgB,CAACb,OAAO,CAAE,CACzCsB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAT,QAAA,CACf,iCAED,CAAQ,CAAC,EACA,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}