{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import BoardList from\"./components/BoardList\";import BoardCreate from\"./components/BoardCreate\";import PostList from\"./components/PostList\";import PostDetail from\"./components/PostDetail\";import PostCreate from\"./components/PostCreate\";import{Router,Routes,Route,useNavigate,Navigate}from\"react-router-dom\";import PostEdit from\"./components/PostEdit\";import Cookies from\"js-cookie\";import{darkTheme,lightTheme}from\"./theme\";import{ThemeProvider}from\"@emotion/react\";import{Box,Button}from\"@mui/material\";import Login from\"./components/Login\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[isLoggedIn,setIsLoggedIn]=useState(!!Cookies.get(\"isLoggedIn\"));const[theme,setTheme]=useState(isLoggedIn?lightTheme:darkTheme);const navigate=useNavigate();useEffect(()=>{setTheme(isLoggedIn?lightTheme:darkTheme);},[isLoggedIn]);const handleLogout=()=>{Cookies.remove(\"isLoggedIn\");setIsLoggedIn(false);navigate(\"/login\");};return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsxs(Box,{sx:{backgroundColor:theme.palette.background.default,minHeight:\"100vh\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uC775\\uBA85 \\uC9C8\\uBB38 \\uAC8C\\uC2DC\\uD310\"}),isLoggedIn&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleLogout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:isLoggedIn?/*#__PURE__*/_jsx(Navigate,{to:\"/boards\"}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/boards\",element:/*#__PURE__*/_jsx(BoardList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/create-board\",element:/*#__PURE__*/_jsx(BoardCreate,{})}),/*#__PURE__*/_jsx(Route,{path:\"/posts\",element:/*#__PURE__*/_jsx(PostList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/post/:id\",element:/*#__PURE__*/_jsx(PostDetail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/create-post\",element:/*#__PURE__*/_jsx(PostCreate,{})}),/*#__PURE__*/_jsx(Route,{path:\"/edit-post/:postId\",element:/*#__PURE__*/_jsx(PostEdit,{})})]})]})},isLoggedIn?\"light\":\"dark\");};export default App;","map":{"version":3,"names":["React","useEffect","useState","BoardList","BoardCreate","PostList","PostDetail","PostCreate","Router","Routes","Route","useNavigate","Navigate","PostEdit","Cookies","darkTheme","lightTheme","ThemeProvider","Box","Button","Login","jsx","_jsx","jsxs","_jsxs","App","isLoggedIn","setIsLoggedIn","get","theme","setTheme","navigate","handleLogout","remove","children","sx","backgroundColor","palette","background","default","minHeight","variant","onClick","path","element","to"],"sources":["C:/workspace/github_test/react-myboard-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BoardList from \"./components/BoardList\";\nimport BoardCreate from \"./components/BoardCreate\";\nimport PostList from \"./components/PostList\";\nimport PostDetail from \"./components/PostDetail\";\nimport PostCreate from \"./components/PostCreate\";\nimport { Router, Routes, Route, useNavigate, Navigate } from \"react-router-dom\";\nimport PostEdit from \"./components/PostEdit\";\nimport Cookies from \"js-cookie\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { Box, Button } from \"@mui/material\";\nimport Login from \"./components/Login\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(!!Cookies.get(\"isLoggedIn\"));\n  const [theme, setTheme] = useState(isLoggedIn ? lightTheme : darkTheme);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setTheme(isLoggedIn ? lightTheme : darkTheme);\n  }, [isLoggedIn]);\n\n  const handleLogout = () => {\n    Cookies.remove(\"isLoggedIn\");\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n  };\n\n  return (\n    <ThemeProvider theme={theme} key={isLoggedIn ? \"light\" : \"dark\"}>\n      <Box\n        sx={{\n          backgroundColor: theme.palette.background.default,\n          minHeight: \"100vh\",\n        }}\n      >\n        <h1>익명 질문 게시판</h1>\n        {isLoggedIn && (\n          <Button variant=\"outlined\" onClick={handleLogout}>\n            로그아웃\n          </Button>\n        )}\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              isLoggedIn ? <Navigate to=\"/boards\" /> : <Navigate to=\"/login\" />\n            }\n          />\n          <Route\n            path=\"/login\"\n            element={<Login setIsLoggedIn={setIsLoggedIn} />}\n          />\n\n          {/* 게시판 목록 페이지 */}\n          {/* <Route path=\"/\" element={<BoardList />} /> */}\n          <Route path=\"/boards\" element={<BoardList />} />\n          {/* 게시판 생성 페이지 */}\n          <Route path=\"/create-board\" element={<BoardCreate />} />\n\n          {/* 게시글 목록 페이지 : boardId를 URL 경로에서 전달 */}\n          {/* <Route path=\"/board/:boardId\" element={<PostList />} /> */}\n          <Route path=\"/posts\" element={<PostList />} />\n\n          {/* 게시글 상세 페이지 (게시글 아이디 전달) */}\n          <Route path=\"/post/:id\" element={<PostDetail />} />\n\n          {/* 게시글 작성 페이지 */}\n          <Route path=\"/create-post\" element={<PostCreate />} />\n\n          {/* 게시글 수정 페이지 */}\n          <Route path=\"/edit-post/:postId\" element={<PostEdit />} />\n        </Routes>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}