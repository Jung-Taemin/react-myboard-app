{"ast":null,"code":"import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import ApiService from\"../../services/ApiService\";// 게시글 상세 정보 가져오기\nexport const fetchPostDetails=createAsyncThunk(\"post/fetchPostDetails\",async(_ref,_ref2)=>{let{postId,password}=_ref;let{rejectWithValue}=_ref2;try{const response=await ApiService.fetchPostDetails(postId,password);return response.data;}catch(error){return rejectWithValue(error.response.data);}});// 게시글 업데이트\nexport const updatePost=createAsyncThunk(\"post/updatePost\",async(_ref3,_ref4)=>{let{postId,postData}=_ref3;let{rejectWithValue}=_ref4;try{const response=await ApiService.updatePost(postId,postData);return response.data;}catch(error){return rejectWithValue(error.response.data);}});// 게시글 삭제\nexport const deletePost=createAsyncThunk(\"post/deletePost\",async(_ref5,_ref6)=>{let{postId,password}=_ref5;let{rejectWithValue}=_ref6;try{await ApiService.deletePost(postId,password);return postId;// 성공시 삭제된 postId 반환\n}catch(error){return rejectWithValue(error.response.data);}});const postSlice=createSlice({name:\"post\",initialState:{post:null,status:\"idle\",error:null},reducers:{setPost:(state,action)=>{state.post=action.payload;}},extraReducers:builder=>{builder.addCase(fetchPostDetails.pending,state=>{state.status=\"loading\";}).addCase(fetchPostDetails.fulfilled,(state,action)=>{state.status=\"succeeded\";state.post=action.payload;}).addCase(fetchPostDetails.rejected,(state,action)=>{state.status=\"failed\";state.post=action.payload;}).addCase(updatePost.pending,state=>{state.status=\"loading\";}).addCase(updatePost.fulfilled,(state,action)=>{state.status=\"succeeded\";state.post=action.payload;}).addCase(updatePost.rejected,(state,action)=>{state.status=\"failed\";state.post=action.payload;}).addCase(deletePost.pending,state=>{state.status=\"loading\";}).addCase(deletePost.fulfilled,(state,action)=>{state.status=\"succeeded\";state.post=null;// 삭제 후 게시글 초기화\n}).addCase(deletePost.rejected,(state,action)=>{state.status=\"failed\";state.post=action.payload;});}});export const{setPost}=postSlice.actions;export default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","ApiService","fetchPostDetails","_ref","_ref2","postId","password","rejectWithValue","response","data","error","updatePost","_ref3","_ref4","postData","deletePost","_ref5","_ref6","postSlice","name","initialState","post","status","reducers","setPost","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/workspace/github_test/react-myboard-app/src/store/slices/postSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport ApiService from \"../../services/ApiService\";\r\n\r\n// 게시글 상세 정보 가져오기\r\nexport const fetchPostDetails = createAsyncThunk(\r\n    \"post/fetchPostDetails\",\r\n    async ({ postId, password }, { rejectWithValue }) => {\r\n        try {\r\n            const response = await ApiService.fetchPostDetails(postId, password);\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n);\r\n\r\n// 게시글 업데이트\r\nexport const updatePost = createAsyncThunk(\r\n    \"post/updatePost\",\r\n    async ({ postId, postData }, { rejectWithValue }) => {\r\n        try {\r\n            const response = await ApiService.updatePost(postId, postData);\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n);\r\n\r\n// 게시글 삭제\r\nexport const deletePost = createAsyncThunk(\r\n    \"post/deletePost\",\r\n    async ({ postId, password }, { rejectWithValue }) => {\r\n        try {\r\n            await ApiService.deletePost(postId, password);\r\n            return postId; // 성공시 삭제된 postId 반환\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n    name: \"post\",\r\n    initialState: {\r\n        post: null,\r\n        status: \"idle\",\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        setPost: (state, action) => {\r\n            state.post = action.payload;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchPostDetails.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(fetchPostDetails.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.post = action.payload;\r\n            })\r\n            .addCase(fetchPostDetails.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.post = action.payload;\r\n            })\r\n            .addCase(updatePost.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(updatePost.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.post = action.payload;\r\n            })\r\n            .addCase(updatePost.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.post = action.payload;\r\n            })\r\n            .addCase(deletePost.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(deletePost.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.post = null; // 삭제 후 게시글 초기화\r\n            })\r\n            .addCase(deletePost.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.post = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { setPost } = postSlice.actions;\r\nexport default postSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}