{"ast":null,"code":"import React,{useState}from\"react\";import ApiService from\"../services/ApiService\";import{useNavigate}from\"react-router-dom\";import{useSelector}from\"react-redux\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PostCreate=()=>{const[userName,setUserName]=useState(\"\");const[password,setPassword]=useState(\"\");const[email,setEmail]=useState(\"\");const[title,setTitle]=useState(\"\");const[content,setContent]=useState(\"\");const navigate=useNavigate();//const location = useLocation();\n//const boardId = location.state.boardId; // state에서 boardId를 가져 옴\nconst boardId=useSelector(state=>state.boardState.boardId);const handleSubmit=async e=>{e.preventDefault();const postData={board_id:boardId,// 게시판 ID 포함: 서버가 기대하는 필드 명 확인\nuser_name:userName,password:password,email:email,title:title,content:content};try{const response=await ApiService.createPost(postData);console.log(\"Post created successfully: \",response.data);//navigate(`/board/${boardId}`); // 작성 완료 후 해당 게시판 게시글 목록 페이지로 이동\nnavigate('/posts');}catch(error){console.error(\"Error creating post : \",error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC791\\uC131\\uC790 \\uC774\\uB984:\"}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userName,onChange:e=>setUserName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638:\"}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC774\\uBA54\\uC77C:\"}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC81C\\uBAA9:\"}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uB0B4\\uC6A9:\"}),\" \",/*#__PURE__*/_jsx(\"textarea\",{value:content,onChange:e=>setContent(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uC791\\uC131\\uD558\\uAE30\"})]})]});};export default PostCreate;","map":{"version":3,"names":["React","useState","ApiService","useNavigate","useSelector","jsx","_jsx","jsxs","_jsxs","PostCreate","userName","setUserName","password","setPassword","email","setEmail","title","setTitle","content","setContent","navigate","boardId","state","boardState","handleSubmit","e","preventDefault","postData","board_id","user_name","response","createPost","console","log","data","error","children","onSubmit","type","value","onChange","target","required"],"sources":["C:/workspace/github_test/react-myboard-app/src/components/PostCreate.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ApiService from \"../services/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PostCreate = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const navigate = useNavigate();\n  //const location = useLocation();\n  //const boardId = location.state.boardId; // state에서 boardId를 가져 옴\n  const boardId = useSelector((state) => state.boardState.boardId);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const postData = {\n      board_id: boardId, // 게시판 ID 포함: 서버가 기대하는 필드 명 확인\n      user_name: userName,\n      password: password,\n      email: email,\n      title: title,\n      content: content,\n    };\n\n    try {\n      const response = await ApiService.createPost(postData);\n      console.log(\"Post created successfully: \", response.data);\n      //navigate(`/board/${boardId}`); // 작성 완료 후 해당 게시판 게시글 목록 페이지로 이동\n      navigate('/posts');\n    } catch (error) {\n      console.error(\"Error creating post : \", error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>게시글 작성</h3>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>작성자 이름:</label>{\" \"}\n          <input\n            type=\"text\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>비밀번호:</label>{\" \"}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>이메일:</label>{\" \"}\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>제목:</label>{\" \"}\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>내용:</label>{\" \"}\n          <textarea\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">작성하기</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PostCreate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}